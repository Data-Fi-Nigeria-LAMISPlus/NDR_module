[{"C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\index.js":"1","C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\App.js":"2","C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\context\\ThemeContext.js":"3","C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\reportWebVitals.js":"4","C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\jsx\\components\\ndr\\Dashboard.js":"6","C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\jsx\\components\\ndr\\generate.js":"7","C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\jsx\\components\\ndr\\download.js":"8","C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\jsx\\components\\PageUtils.js":"9","C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\api.js":"10"},{"size":753,"mtime":1675852616639,"results":"11","hashOfConfig":"12"},{"size":930,"mtime":1675852616632,"results":"13","hashOfConfig":"12"},{"size":9235,"mtime":1675852618851,"results":"14","hashOfConfig":"12"},{"size":375,"mtime":1675852632669,"results":"15","hashOfConfig":"12"},{"size":3056,"mtime":1675852618859,"results":"16","hashOfConfig":"12"},{"size":5456,"mtime":1675852632612,"results":"17","hashOfConfig":"12"},{"size":7383,"mtime":1675852632623,"results":"18","hashOfConfig":"12"},{"size":7782,"mtime":1675852632617,"results":"19","hashOfConfig":"12"},{"size":275,"mtime":1675852632606,"results":"20","hashOfConfig":"12"},{"size":421,"mtime":1675852618845,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"nv5fa4",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\index.js",["46"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n","C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\App.js",[],"C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\jsx\\components\\ndr\\Dashboard.js",["47"],"import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { MdDashboard, MdContacts } from 'react-icons/md';\r\nimport GenerateNdr from './generate';\r\nimport DownloadNdr from './download';\r\nimport {getQueryParams} from \"./../PageUtils\";\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={5}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-force-tab-${index}`,\r\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root2: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        margin: theme.spacing(7),\r\n        bullet: {\r\n            display: 'inline-block',\r\n            margin: '0 2px',\r\n            transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n            fontSize: 12,\r\n\r\n        },\r\n        pos: {\r\n            fontSize: 11,\r\n        },\r\n        cardContent: {\r\n            padding: 2,\r\n        },\r\n        cardroot: {\r\n            margin: theme.spacing(1),\r\n            height: 250 + 'px !important',\r\n        }\r\n\r\n    },\r\n    alertmsge: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    rootaccordia: {\r\n        width: '100%',\r\n    },\r\n    accordiaheading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    allergiesroot: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n    },\r\n\r\n    checkboxroot: {\r\n        display: 'flex',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3),\r\n    },\r\n\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n\r\n    },\r\n\r\n    formroot: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '33.33%',\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n    inforoot: {\r\n        width: '95%',\r\n        margin: 20,\r\n        backgroundColor: '#eee',\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst HomePage = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const urlIndex = getQueryParams(\"tab\", props.location); \r\n    const urlTabs = urlIndex !== null ? urlIndex : props.location ;\r\n    useEffect ( () => {\r\n        switch(urlTabs){  \r\n        case \"generate\": return setValue(0)\r\n        case \"download\": return setValue(1)\r\n        default: return setValue(0)\r\n        }\r\n    }, [urlIndex]);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n        \r\n        \r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.inforoot}>\r\n          {/* <PatientDetailCard getpatientdetails={props.location.state }/>    */}\r\n        </div>\r\n\r\n        <AppBar position=\"static\" style={{backgroundColor:'#014d88'}}>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"on\"\r\n            indicatorColor=\"secondary\"\r\n            textColor=\"inherit\"\r\n            aria-label=\"scrollable force tabs example\"\r\n          >\r\n            <Tab\r\n              className={classes.title}\r\n              label=\"Generate Messages \"\r\n              icon={<MdDashboard />}\r\n              {...a11yProps(0)}\r\n            />\r\n            <Tab\r\n              className={classes.title}\r\n              label=\"Download Files\"\r\n              icon={<MdContacts />}\r\n              {...a11yProps(1)}\r\n            />\r\n            \r\n          </Tabs>\r\n          <div></div>\r\n        </AppBar>\r\n\r\n       \r\n        <TabPanel value={value} index={0}>\r\n          <GenerateNdr />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <DownloadNdr />\r\n        </TabPanel>\r\n        \r\n\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HomePage;","C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\jsx\\components\\ndr\\generate.js",["48","49","50","51","52","53"],"import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport axios from \"axios\";\r\nimport * as api from \"./../../../api\";\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { CardBody, Card} from 'reactstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport {GiFiles} from 'react-icons/gi'; \r\nimport Button from \"@material-ui/core/Button\";\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport {  Modal, ModalBody } from 'reactstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default function GenerateNdr(props) {\r\n  //const [loading, stillLoading] = useState(true)\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const [facilities, setFacilities] = useState( [])\r\n  const [processing, setProcessing] =  useState(false)\r\n  const [facilitiesApi, setfacilitiesApi] = useState({facilities: []})\r\n  const [status, setStatus] = useState(false);\r\n  const [checked, setChecked] = React.useState([]);  \r\n  const [user, setUser] = useState(null);\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  useEffect(() => {\r\n    fetchMe()\r\n  }, []);\r\n\r\n ///GET LIST OF FACILITIES\r\n  async function fetchMe() {\r\n\r\n    axios\r\n        .get(`${api.url}account`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n        .then((response) => {\r\n          setUser(response.data);\r\n          setFacilities(response.data.applicationUserOrganisationUnits);\r\n           })\r\n        .catch((error) => {\r\n\r\n        });\r\n  \r\n}\r\n\r\n//GET LIST OF NDR GENERATED\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n    \r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setStatus(!status);\r\n    console.log(status);\r\n  }\r\n const  generateAction = () => {\r\n   setProcessing(true)\r\n   setModal(true)\r\n   let FacilityIDArray = \"\";\r\n  //LOOPING THROUGH THE FACILITIES OBJECT ARRAY TO FORM THE NEW OBJECT \r\n   checked.forEach(function(value) {\r\n    const id = value.organisationUnitId\r\n    const facilityparam= \"facilityIds=\"+id\r\n    FacilityIDArray=facilityparam\r\n    //FacilityIDArray.push(id);\r\n       \r\n   });\r\n    //console.log(FacilityIDArray)\r\n    facilitiesApi['facilities'] = FacilityIDArray;\r\n    //SENDING A POST REQUEST \r\n    axios.get(`${api.url}ndr/generate?${FacilityIDArray}&isInitial=${status}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n            .then(response => {\r\n              window.setTimeout(() => {\r\n                toast.success(\" Generating NDR Successful!\");\r\n                setModal(false)\r\n              }, 5000);\r\n              \r\n              //props.history.push(\"/generate\", { state: 'download'});\r\n            })\r\n            .catch(error => {\r\n              setModal(false)\r\n              setProcessing(false) // set the generate button true\r\n              //toast.error(\" Something went wrong!\");\r\n              if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n            });\r\n        }\r\n\r\n\r\n  return (\r\n    <div > \r\n    <ToastContainer autoClose={3000} hideProgressBar />    \r\n      <Card>\r\n      \r\n        <CardBody> \r\n   \r\n            \r\n          {checked.length >= 1 ? <>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              className=\" float-right mr-1\"\r\n              size=\"large\"            \r\n              hidden={processing}\r\n              onClick= {() => generateAction()}\r\n            >\r\n              {<GiFiles />} &nbsp;&nbsp;\r\n              <span style={{textTransform: 'capitalize'}}> Generate Messages</span>\r\n              \r\n            </Button>\r\n            </>\r\n            :\r\n            <>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              className=\" float-right mr-1\"\r\n              size=\"large\"\r\n              disabled=\"true\"\r\n            >\r\n              {<GiFiles />} &nbsp;&nbsp;\r\n              <span style={{textTransform: 'capitalize'}}> Generate Messages </span>\r\n              \r\n            </Button>\r\n            </>\r\n        }\r\n\r\n            <>\r\n            <br/> <br/>\r\n            <Alert severity=\"info\">\r\n            <AlertTitle>Info</AlertTitle>\r\n              Please check the Facilities you want  \r\n            </Alert>\r\n            <br/>\r\n            <label>\r\n            <input type=\"radio\"  name=\"status\" checked={status===false} onChange={handleChange} />\r\n            <b> Updated</b>\r\n            </label>\r\n            {\"   \"}{\"   \"}\r\n            <label>\r\n              <input type=\"radio\"  name=\"status\"  checked={status===true} onChange={handleChange} />\r\n              <b> Initial</b>\r\n            </label>\r\n            <br/>\r\n          <List dense className={classes.root} >\r\n                  \r\n      <br/>\r\n\r\n        {facilities.map((value) => {\r\n          //console.log(value)\r\n          const labelId = `checkbox-list-secondary-label-${value.id}`;\r\n          return (\r\n            <ListItem key={value.id} button>\r\n              <ListItemAvatar>\r\n                <AccountBalanceIcon />\r\n              </ListItemAvatar>\r\n              <ListItemText id={labelId} primary={`${value.organisationUnitName }`} />\r\n              <ListItemSecondaryAction>\r\n                <Checkbox\r\n                  edge=\"end\"\r\n                  onChange={handleToggle(value)}\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n            \r\n          );\r\n          \r\n        })}\r\n        </List>\r\n       \r\n        </>\r\n        \r\n        \r\n      </CardBody>\r\n    </Card>\r\n    <Modal isOpen={modal} toggle={toggle} backdrop={false} fade={true} style={{marginTop:\"250px\"}} size='lg'>\r\n        \r\n        <ModalBody>\r\n         <h2>Generating NDR File. Please wait...</h2>\r\n        </ModalBody>\r\n        \r\n      </Modal> \r\n  </div>\r\n    \r\n  );\r\n  \r\n}\r\n","C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\jsx\\components\\ndr\\download.js",["54","55","56","57","58"],"import React, {forwardRef, useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport * as api from \"./../../../api\";\r\nimport axios from \"axios\";\r\nimport {Modal, ModalBody, ModalHeader} from 'reactstrap';\r\nimport MaterialTable from 'material-table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport {FiUploadCloud} from \"react-icons/fi\";\r\n//import FileSaver from \"file-saver\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref}/>),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>)\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function DownloadNdr() {\r\n    const classes = useStyles();\r\n    const [generatedNdrListed, setGeneratedNdrList] = useState([])\r\n    const [loading, setLoading] = useState('')\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n\r\n    useEffect(() => {\r\n        generatedNdrList()\r\n    }, []);\r\n\r\n    //Load NDR WEB in the modal\\\r\n    const loadNdrWeb = () => {\r\n        toggle()\r\n    }\r\n\r\n    ///GET LIST OF FACILITIES\r\n    async function generatedNdrList() {\r\n        axios\r\n            .get(`${api.url}ndr/files`,\r\n                {headers: {\"Authorization\": `Bearer ${api.token}`}}\r\n            )\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                setGeneratedNdrList(response.data);\r\n                console.log(response.data);\r\n\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n\r\n    const downloadFile = (fileName) => {\r\n \r\n        axios\r\n            .get(`${api.url}ndr/download/${fileName}`,\r\n                {headers: {\"Authorization\": `Bearer ${api.token}`}, responseType: 'blob'}\r\n            )\r\n            .then((response) => {\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                //FileSaver.saveAs(blob, `${fileName}.zip`);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-right\"\r\n                startIcon={<FiUploadCloud size=\"10\"/>}\r\n                style={{backgroundColor: '#014d88'}}\r\n                href=\"https://ndr.phis3project.org.ng/Identity/Account/Login?ReturnUrl=%2F\"\r\n                //onClick={loadNdrWeb}\r\n                target=\"_blank\"\r\n            >\r\n                <span>Upload to NDR</span>\r\n            </Button>\r\n\r\n            <br/><br/>\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"List of Filies Generated\"\r\n\r\n                columns={[\r\n                    {title: \"Facility Name\", field: \"name\", filtering: false},\r\n                    {\r\n                        title: \"Number of Files Generated\",\r\n                        field: \"files\",\r\n                        filtering: false\r\n                    },\r\n                    {title: \"File Name\", field: \"fileName\", filtering: false},\r\n                    {title: \"Date Last Generated\", field: \"date\", type: \"date\", filtering: false},\r\n\r\n                    {\r\n                        title: \"Action\",\r\n                        field: \"actions\",\r\n                        filtering: false,\r\n                    },\r\n                ]}\r\n                isLoading={loading}\r\n                data={generatedNdrListed.map((row) => ({\r\n                    name: row.facility,\r\n                    files: row.files,\r\n                    fileName: row.fileName,\r\n                    date: row.lastModified,\r\n                    actions:\r\n\r\n                        <Tooltip title=\"Download\" onClick={() => downloadFile(row.fileName)}>\r\n                            <IconButton aria-label=\"Download\">\r\n                                <CloudDownloadIcon color=\"primary\"/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                }))}\r\n                options={{\r\n\r\n                    pageSizeOptions: [5, 10, 50, 100, 150, 200],\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        margin: \"auto\"\r\n                    },\r\n                    filtering: true,\r\n                    searchFieldStyle: {\r\n                        width: '300%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                }}\r\n\r\n            />\r\n\r\n            <Modal isOpen={modal} toggle={toggle} backdrop={false} fade={true} size=\"xl\" style={{marginTop: \"50px\"}}>\r\n                <ModalHeader toggle={toggle}></ModalHeader>\r\n                <ModalBody>\r\n                    <iframe style={{width: \"100%\", height: \"100%\", border: \"none\", margin: 0, padding: 0}}\r\n                            src=\"https://ndr.phis3project.org.ng/Identity/Account/Login?ReturnUrl=%2F\"></iframe>\r\n                    <embed src=\"https://ndr.phis3project.org.ng/\"\r\n                           width=\"100%\"\r\n                           height=\"1000\"\r\n                           onerror=\"alert('URL invalid !!');\"\r\n                    />\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n","C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\jsx\\components\\PageUtils.js",[],"C:\\Users\\amos.aniwange\\Documents\\dev\\NDR_module\\src\\main\\webapp\\api.js",[],{"ruleId":"59","severity":1,"message":"60","line":4,"column":41,"nodeType":"61","messageId":"62","endLine":4,"endColumn":47},{"ruleId":"63","severity":1,"message":"64","line":163,"column":8,"nodeType":"65","endLine":163,"endColumn":18,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":11,"column":10,"nodeType":"69","messageId":"70","endLine":11,"endColumn":24,"fix":"71"},{"ruleId":"59","severity":1,"message":"72","line":11,"column":33,"nodeType":"61","messageId":"62","endLine":11,"endColumn":40},{"ruleId":"59","severity":1,"message":"73","line":18,"column":10,"nodeType":"61","messageId":"62","endLine":18,"endColumn":20},{"ruleId":"59","severity":1,"message":"74","line":22,"column":10,"nodeType":"61","messageId":"62","endLine":22,"endColumn":17},{"ruleId":"59","severity":1,"message":"75","line":42,"column":25,"nodeType":"61","messageId":"62","endLine":42,"endColumn":41},{"ruleId":"59","severity":1,"message":"76","line":45,"column":10,"nodeType":"61","messageId":"62","endLine":45,"endColumn":14},{"ruleId":"59","severity":1,"message":"77","line":63,"column":11,"nodeType":"61","messageId":"62","endLine":63,"endColumn":18},{"ruleId":"59","severity":1,"message":"78","line":65,"column":21,"nodeType":"61","messageId":"62","endLine":65,"endColumn":31},{"ruleId":"59","severity":1,"message":"79","line":74,"column":11,"nodeType":"61","messageId":"62","endLine":74,"endColumn":21},{"ruleId":"59","severity":1,"message":"80","line":103,"column":21,"nodeType":"61","messageId":"62","endLine":103,"endColumn":25},{"ruleId":"81","severity":1,"message":"82","line":185,"column":21,"nodeType":"83","endLine":186,"endColumn":104},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'urlTabs'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"85","text":"86"},"'baseUrl' is defined but never used.","'useHistory' is defined but never used.","'Spinner' is defined but never used.","'setfacilitiesApi' is assigned a value but never used.","'user' is assigned a value but never used.","'classes' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'loadNdrWeb' is assigned a value but never used.","'blob' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement",{"desc":"87","fix":"88"},[538,552],"token","Update the dependencies array to be: [urlIndex, urlTabs]",{"range":"89","text":"90"},[4066,4076],"[urlIndex, urlTabs]"]