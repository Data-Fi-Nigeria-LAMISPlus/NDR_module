{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Enrollment/EnrollmentForm.js","main/webapp/jsx/components/ArtCommencement/ArtCommencement.js","main/webapp/jsx/components/EnhancedAdherenceCounseling/EnhancedAdherenceCounseling.js","main/webapp/jsx/components/DifferentiatedCare/DifferentiatedCare.js","main/webapp/jsx/components/ClientStatusUpdate/ClientStatusUpdate.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/Patient/PatientDetail.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","useStyles","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","Enrollment","props","patientObj","classes","useHistory","useState","values","id","uniqueId","dateOfRegistration","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","objValues","setObjValues","saving","setSaving","errors","carePoints","setCarePoints","sourceReferral","setSourceReferral","hivStatus","setHivStatus","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","pregnancyStatus","setPregnancyStatus","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","useEffect","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","axios","baseUrl","headers","then","response","data","catch","error","handleInputChange","e","target","name","value","console","log","Modal","show","showModal","toggle","className","size","Header","style","backgroundColor","firstname","surname","variant","onClick","Body","CardBody","FormGroup","for","Input","type","onChange","required","time","regDate","value1","moment","format","max","Date","map","gender","pregnancy_status","checked","htmlFor","Spinner","color","startIcon","preventDefault","personId","post","toast","success","loadPatients","textTransform","ArtCommencement","setTransferStatus","setValues","patient_id","current_status","a","patients","participant_id","dob","first_name","mid_name","last_name","phone","address","ClientStatusUpdate","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","fontSize","patientList","setPatientList","setpatientObj","modal","setModal","artModal","setArtModal","ancModal","setAncModal","careModal","setCareModal","clientStatusUpdateModal","setClientStatusUpdateModal","calculate_age","today","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","loadEnrollment","row","icons","title","columns","field","filtering","hospital_number","age","dateOfBirth","undefined","status","currentStatus","active","Label","actions","border","borderRadius","to","pathname","state","loadArt","loadAnc","loadCare","loadStatusUpdate","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","EnhancedAdherenceCounseling","DifferentiatedCare","divStyle","Home","key","setKey","Row","Col","xl","Card","Tabs","activeKey","onSelect","k","Tab","eventKey","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","patient","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","md","root2","vaccination_status","Divider","PatientnHistory","date","v_status","history","CardContent","Button","PatientHistory","App","path","PatientDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","version","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","label","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","background","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","alert","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","fontFamily","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.85527e4a.chunk.js","sourcesContent":["\r\nexport const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/'\r\n//export const url =  'http://localhost:8282/api/';\r\n//export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjUwNTY4MDY5fQ.ojvW_tOMKNUMGf3-IKJl1OX73SU7dP9DDZxDwO87nRJBRx_xJ7dsxNFoCuTCYmdUev92PpwjYLZXfuviudT4iA';","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Enrollment = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [sourceReferral, setSourceReferral] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    const [enrollSetting, setEnrollSetting] = useState([]);\r\n    const [tbStatus, setTbStatus] = useState([]);\r\n    const [kP, setKP] = useState([]);\r\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n      }, []);\r\n\r\n      //Get list of CareEntryPoint\r\n      const CareEntryPoint =()=>{\r\n             axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });\r\n            \r\n      }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n    }\r\n     //Get list of HIV STATUS ENROLLMENT\r\n     const HivStatus =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setHivStatus(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n      //Get list of HIV STATUS ENROLLMENT\r\n      const EnrollmentSetting =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setEnrollSetting(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n      //Get list of HIV STATUS ENROLLMENT\r\n      const TBStatus =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setTbStatus(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n      //Get list of KP\r\n      const KP =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/KP_TYPE`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setKP(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n      //Get list of KP\r\n      const PregnancyStatus =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPregnancyStatus(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n        const handleInputChange = e => {\r\n            \r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            if(e.target.name ===\"entryPointId\" ){\r\n                console.log(e.target.value)\r\n                if(e.target.value===\"21\"){\r\n                    setTransferIn(true)\r\n                }else{\r\n                    setTransferIn(false)\r\n                }\r\n            }\r\n\r\n          }\r\n          \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }      \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.personId= patientObj.id\r\n          delete objValues['tableData'];\r\n            console.log(objValues)\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}hiv`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.loadPatients()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 HIV Enrollment Form - <b>{patientObj.firstname + \" \" + patientObj.surname }</b>\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"uniqueId\"\r\n                                            id=\"uniqueId\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.uniqueId}\r\n                                            required\r\n                                        />\r\n                                        {errors.uniqueId !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.uniqueId}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateOfRegistration\"\r\n                                            id=\"dateOfRegistration\"\r\n                                            value={objValues.regDate}\r\n                                            onChange={value1 =>\r\n                                                setObjValues({ ...objValues, dateOfRegistration: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.dateOfRegistration !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"entryPointId\">Care Entry Point</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"entryPointId\"\r\n                                        id=\"entryPointId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.entryPointId}\r\n                                        required\r\n                                    >\r\n                                    <option value=\"\"> </option>\r\n                      \r\n                                    {carePoints.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                    {errors.entryPointId !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.entryPointId}</span>\r\n                                        ) : \"\" }\r\n                                    </Input>\r\n                                    </FormGroup>\r\n                                    \r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                    {transferIn===true ? \r\n                                        (\r\n                                            <FormGroup>\r\n                                            <Label >Facility Name</Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"facilityName\"\r\n                                                id=\"facilityName\"\r\n                                                onChange={handleInputChange}\r\n                                                value={objValues.facilityName}\r\n                                                required\r\n                                            />\r\n                                            </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >HIV Status at Registration</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"statusAtRegistrationId\"\r\n                                        id=\"statusAtRegistrationId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.statusAtRegistrationId}\r\n                                        required\r\n                                    >\r\n                                    <option value=\"\"> </option>\r\n                      \r\n                                    {hivStatus.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                    {errors.statusAtRegistrationId !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                        ) : \"\" }\r\n                                    </Input>\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of Confirmed HIV Test *</Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateConfirmedHiv\"\r\n                                            id=\"dateConfirmedHiv\"\r\n                                            value={objValues.regDate}\r\n                                            onChange={value1 =>\r\n                                                setObjValues({ ...objValues, dateConfirmedHiv: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                           \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Source of Referral</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"sourceOfReferrer\"\r\n                                            id=\"sourceOfReferrer\"\r\n                                            value={objValues.sourceOfReferrer}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"\"> </option>\r\n                      \r\n                                                {sourceReferral.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                        {errors.sourceOfReferrer !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.sourceOfReferrer}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Enrollment Setting</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"enrollmentSettingId\"\r\n                                            id=\"enrollmentSettingId\"\r\n                                            value={objValues.enrollmentSettingId}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"\"> </option>\r\n                      \r\n                                                {enrollSetting.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                        {errors.enrollmentSettingId !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                {\r\n                                    patientObj.gender !== 1 ?\r\n                                        (\r\n                                        <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            onChange = {handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            < option\r\n                                            value = \"\" > </option>\r\n\r\n                                            {\r\n                                                pregnancyStatus.map((value) => (\r\n                                                    < option\r\n                                                key = {value.id}\r\n                                                value = {value.id} >\r\n                                                    {value.display}\r\n                                                    </option>\r\n                                            ))\r\n                                            }\r\n                                        </Input>\r\n                                        \r\n                                            {\r\n                                                errors.pregnancy_status !== \"\" ? (\r\n                                                    < span className = {classes.error} > {errors.pregnancy_status} </span>\r\n                                                    \r\n                                            ) :\r\n                                                \"\"\r\n                                            }\r\n                                      </FormGroup>  \r\n                                    </div>\r\n                                )\r\n                                :\r\n                                    \"\"\r\n                                }\r\n                                {\r\n                                    patientObj.gender !== 1 ?\r\n                                        (\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LPM </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setObjValues({ ...objValues, dateOfLpm: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n\r\n                                                max={new Date()}\r\n                                        />\r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                    \"\"\r\n                                }\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >TB Status</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"tbStatusId\"\r\n                                            id=\"tbStatusId\"\r\n                                            value={objValues.tbStatusId}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"\"> </option>\r\n                      \r\n                                                {tbStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                        {errors.tbStatusId !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >KP Target Group</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"targetGroupId\"\r\n                                            id=\"targetGroupId\"\r\n                                            value={objValues.targetGroupId}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"\"> </option>\r\n                      \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                        {errors.targetGroupId !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        \r\n                                        <div className=\"form-check custom-checkbox ml-1 \">\r\n                                            <input\r\n                                            type=\"checkbox\"\r\n                                            className=\"form-check-input\"\r\n                                            \r\n                                            name=\"ovc_enrolled\"\r\n                                            id=\"ovc_enrolled\"\r\n                                            onChange={handleCheckBox}\r\n                                            //value={values.ovc_enrolled}\r\n                                            />\r\n                                            <label\r\n                                            className=\"form-check-label\"\r\n                                            htmlFor=\"basic_checkbox_1\"\r\n                                            >\r\n                                            Enrolled into OVC?\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        {ovcEnrolled===true ? \r\n                                            (\r\n                                            <FormGroup>\r\n                                            <Label >OVC Number</Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"ovcNumber\"\r\n                                                id=\"ovcNumber\"\r\n                                                onChange={handleInputChange}\r\n                                                value={objValues.ovcNumber}\r\n                                                required\r\n                                            />\r\n                                            </FormGroup>\r\n                                            )\r\n                                            :\r\n                                            \"\"\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={props.toggle}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Enrollment;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ArtCommencement = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [transferStatus, setTransferStatus] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({patient_id: \"\",current_status:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/patientstatus/current-status-codeset`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setTransferStatus(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.patient_id= patientObj.id\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/patientstatus`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Transfer successful\");\r\n                  props.toggle()\r\n                  props.loadPatients()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"xl\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 ART Commencement - <b>{patientObj.firstname + \" \" + patientObj.surname }</b>\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">ART Start Date  * </Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"participant_id\"\r\n                                            id=\"participant_id\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.participant_id}\r\n                                            required\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">CD4 at start of ART </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                              \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"first_name\">CD4%</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"first_name\"\r\n                                        id=\"first_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.first_name}\r\n                                        required\r\n                                    />\r\n                                    {errors.first_name !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.first_name}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >Original Regimen Line  </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"mid_name\"\r\n                                        id=\"mid_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.mid_name}\r\n                                        required\r\n                                    />\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >Original Regimen</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"last_name\"\r\n                                        id=\"last_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.last_name}\r\n                                        required\r\n                                    />\r\n                                    {errors.last_name !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.last_name}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Viral Load at Start of ART *</Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                            {values.dob ===\"Invalid date\" ? (\r\n                                                <span className={classes.error}>{\"This field is required\"}</span>\r\n                                            ) : \"\" }\r\n                                            {errors.dob !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dob}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >WHO Staging</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"gender\"\r\n                                            id=\"gender\"\r\n                                            value={values.gender}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\"> Please Select</option>\r\n                                            <option value=\"1\"> Male</option>\r\n                                            <option value=\"2\"> Female</option>\r\n                                        </Input>\r\n                                        {errors.gender !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.gender}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Functional Status</Label>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"phone\"\r\n                                            id=\"phone\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.phone}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >TB Status</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Body Weight</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Height</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Blood Pressure</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Blood Pressure</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        {/* <FormGroup>\r\n                                        <Label >Height</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup> */}\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >LMP</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArtCommencement;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Enrollment = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [transferStatus, setTransferStatus] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({patient_id: \"\",current_status:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n \r\n        const handleInputChange = e => {\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.patient_id= patientObj.id\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/patientstatus`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Transfer successful\");\r\n                  props.toggle()\r\n                  props.loadPatients()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Enhanced Adherence Counselling - <b>{patientObj.firstname + \" \" + patientObj.surname }</b>\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of 1st EAC Session </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of 1st EAC Completion </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                 \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                 >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                                </MatButton>\r\n                          \r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}\r\n                                    onClick={props.toggle}\r\n                                >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Enrollment;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ArtCommencement = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [transferStatus, setTransferStatus] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({patient_id: \"\",current_status:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/patientstatus/current-status-codeset`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setTransferStatus(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.patient_id= patientObj.id\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/patientstatus`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Transfer successful\");\r\n                  props.toggle()\r\n                  props.loadPatients()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"xl\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Differentiated Care - <b>{patientObj.firstname + \" \" + patientObj.surname }</b>\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of Devolvement  * </Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"participant_id\"\r\n                                            id=\"participant_id\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.participant_id}\r\n                                            required\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Type of DMOC </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                              \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"first_name\">Type of Scripting</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"first_name\"\r\n                                        id=\"first_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.first_name}\r\n                                        required\r\n                                    />\r\n                                    {errors.first_name !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.first_name}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >Viral Load Assessment done </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"mid_name\"\r\n                                        id=\"mid_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.mid_name}\r\n                                        required\r\n                                    />\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >CD4 Count Assessment Done</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"last_name\"\r\n                                        id=\"last_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.last_name}\r\n                                        required\r\n                                    />\r\n                                    {errors.last_name !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.last_name}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Current Viral Load</Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                            {values.dob ===\"Invalid date\" ? (\r\n                                                <span className={classes.error}>{\"This field is required\"}</span>\r\n                                            ) : \"\" }\r\n                                            {errors.dob !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dob}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of Viral Load</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"gender\"\r\n                                            id=\"gender\"\r\n                                            value={values.gender}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\"> Please Select</option>\r\n                                            <option value=\"1\"> Male</option>\r\n                                            <option value=\"2\"> Female</option>\r\n                                        </Input>\r\n                                        {errors.gender !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.gender}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Current CD4</Label>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"phone\"\r\n                                            id=\"phone\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.phone}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of CD4</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Current Clinical Stage</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of Clinical Stage</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >ARV Regimen</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of Next ARV Refill</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of next Clinic/Lab re-eveluation</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        {/* <FormGroup>\r\n                                        <Label >LMP</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup> */}\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Input\r\n                                            type=\"checkbox\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                            className=\"ms-3\"\r\n                                        />\r\n                                        <Label >Click to fill form if patient discontinued DEMOC</Label>\r\n                                        \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Discontinued</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Reason for discontinued</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArtCommencement;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ClientStatusUpdate = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [transferStatus, setTransferStatus] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({patient_id: \"\",current_status:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n \r\n        const handleInputChange = e => {\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.patient_id= patientObj.id\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/patientstatus`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Transfer successful\");\r\n                  props.toggle()\r\n                  props.loadPatients()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Client Status Update - <b>{patientObj.firstname + \" \" + patientObj.surname }</b>\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >New Status</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"gender\"\r\n                                            id=\"gender\"\r\n                                            value={values.gender}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\"> Please Select</option>\r\n                                            <option value=\"1\"> Male</option>\r\n                                            <option value=\"2\"> Female</option>\r\n                                        </Input>\r\n                                        {errors.gender !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.gender}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of New Status </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Tracking Outcome</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"gender\"\r\n                                            id=\"gender\"\r\n                                            value={values.gender}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\"> Please Select</option>\r\n                                            <option value=\"1\"> Male</option>\r\n                                            <option value=\"2\"> Female</option>\r\n                                        </Input>\r\n                                        {errors.gender !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.gender}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of Tracked</Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                 \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                 >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                                </MatButton>\r\n                          \r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}\r\n                                    onClick={props.toggle}\r\n                                >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClientStatusUpdate;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {FaSyringe, FaUserEdit, FaShare, FaEye} from \"react-icons/fa\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport Enrollment from './../Enrollment/EnrollmentForm'\r\nimport ArtCommencement from './../ArtCommencement/ArtCommencement'\r\nimport EnhancedAdherenceCounseling from './../EnhancedAdherenceCounseling/EnhancedAdherenceCounseling'\r\nimport DifferentiatedCare from './../DifferentiatedCare/DifferentiatedCare';\r\nimport StatusUpdate from './../ClientStatusUpdate/ClientStatusUpdate'\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n// let patientListObj=[\r\n//     {\"id\":5,\"uuid\":\"18ec0eb0-7298-48b9-890b-d0c6578d51e7\",\"first_name\":\"Mathew\",\"mid_name\":\"\",\"last_name\":\"Adegbite\",\"participant_id\":\"536HTJG445\",\"gender\":2,\"dob\":\"2020-01-28\",\"phone\":\"08103910237\",\"current_status\":null,\"vaccination_status\":null,\"address\":\"15 Unity Estate Saburi Extension, Deidei Abuja\"},\r\n//     {\"id\":2,\"uuid\":\"eee2d7e8-e9c1-4963-b2eb-6dcc1944f9e3\",\"first_name\":\"Mathew\",\"mid_name\":\"\",\"last_name\":\"Adegbite\",\"participant_id\":\"TUGVF89555\",\"gender\":2,\"dob\":\"2001-07-13\",\"phone\":\"08103910237\",\"current_status\":\"5\",\"vaccination_status\":\"2\",\"address\":\"15 Unity Estate Saburi Extension, Deidei Abuja\"}]\r\n\r\n\r\nconst Patients = (props) => {\r\n    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [patientObj, setpatientObj] = useState([])\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [artModal, setArtModal] = useState(false);\r\n    const Arttoggle = () => setArtModal(!artModal);\r\n    const [ancModal, setAncModal] = useState(false);\r\n    const Anctoggle = () => setAncModal(!ancModal);\r\n    const [careModal, setCareModal] = useState(false);\r\n    const Caretoggle = () => setCareModal(!careModal);\r\n    const [clientStatusUpdateModal, setClientStatusUpdateModal] = useState(false);\r\n    const ClientStatusUpdatetoggle = () => setClientStatusUpdateModal(!clientStatusUpdateModal);\r\n    // const [deleteModal, setDeleteModal] = useState(false);\r\n    // const Deletetoggle = () => setDeleteModal(!deleteModal);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}patient`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    console.log(response.data)\r\n                    setPatientList(response.data);\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n\r\n    const loadEnrollment =(row)=> {\r\n        setpatientObj({...patientObj, ...row});\r\n            setModal(!modal)\r\n    }\r\n    const loadArt =(row)=> {\r\n        setpatientObj({...patientObj, ...row});\r\n            setArtModal(!artModal)\r\n    }\r\n    const loadAnc =(row)=> {\r\n        setpatientObj({...patientObj, ...row});\r\n            setAncModal(!ancModal)\r\n    }\r\n    const loadCare =(row)=> {\r\n        setpatientObj({...patientObj, ...row});\r\n            setCareModal(!careModal)\r\n    }\r\n    const loadStatusUpdate =(row)=> {\r\n        setpatientObj({...patientObj, ...row});\r\n        setClientStatusUpdateModal(!clientStatusUpdateModal)\r\n    }\r\n    // const DeletePatientModal =(row)=> {\r\n    //     setpatientObj({...patientObj, ...row});\r\n    //     setDeleteModal(!deleteModal)\r\n    // }\r\n    \r\n    \r\n    const VaccinationStatus = (patient)=>{\r\n        //console.log(patient)\r\n        if(patient.vaccination_status===null){\r\n            return (<><Label color=\"yellow\" size=\"mini\">Not Enroll</Label></> )\r\n        }else if(patient.vaccination_status===\"1\"){\r\n            return (<><Label color=\"teal\" size=\"mini\">Enrolled</Label></> )\r\n        }else if(patient.vaccination_status===\"2\"){\r\n            return (<><Label color=\"green\" size=\"mini\">Enrolled</Label></> )\r\n        }else {\r\n            return \"\"\r\n        }\r\n    }\r\n    const CurrentStatus = (currentStatus)=>{\r\n        if(currentStatus===true){\r\n            return (<Label color=\"blue\" size=\"mini\">active</Label>);\r\n        }else {\r\n            return   (<Label color=\"yellow\" size=\"mini\">None</Label>);\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n         {/* <Link to={\"register-patient\"} >\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n            </Link>        \r\n        <br/><br/> */}\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Find Patient \"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                //{ title: \"Gender\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n                //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                { title: \"Status\", field: \"status\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ patientList.map((row) => ({\r\n                  //Id: manager.id,\r\n                    name:row.firstname + \" \" + row.surname,\r\n                    hospital_number: row.id,\r\n                    address: row.address,\r\n                   //phone_number:  row.phone,\r\n                    //gender:row.gender===1? \"Male\" : \"Female\",\r\n                    age: (row.dateOfBirth === 0 ||\r\n                        row.dateOfBirth === undefined ||\r\n                        row.dateOfBirth === null ||\r\n                        row.dateOfBirth === \"\" )\r\n                          ? 0\r\n                          : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                    \r\n                    status: CurrentStatus(row.active),\r\n                    //         ,\r\n                    actions:\r\n            \r\n                    <div>\r\n                    <Menu>\r\n                        <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\r\n                          Actions <span aria-hidden>▾</span>\r\n                        </MenuButton>\r\n                            <MenuList style={{ color:\"#000000 !important\"}} >\r\n                                {/* <MenuItem  style={{ color:\"#000 !important\"}}>                      \r\n                                    <Link\r\n                                        to={{pathname: \"/patient-dashboard\", state: { patientObj: row  }}}>\r\n                                        <MdDashboard size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Patient Dashboard</span>\r\n                                  </Link>                               \r\n                                </MenuItem>   */}\r\n                                <MenuItem style={{ color:\"#000 !important\"}}>\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: \"/patient-history\",\r\n                                            state: { patientObj: row  }\r\n                                        }}>\r\n                                    <FaEye size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>View History</span>                   \r\n                                    </Link>\r\n                                </MenuItem>                                    \r\n                                  <MenuItem style={{ color:\"#000 !important\"}}  onClick={() => loadEnrollment(row)}>\r\n                                     \r\n                                        <FaShare size=\"15\"  />{\" \"}\r\n                                        <span style={{color: '#000'}}>HIV Enrollment</span>\r\n                                                                    \r\n                                  </MenuItem>\r\n                                  <MenuItem style={{ color:\"#000 !important\"}} onClick={() => loadArt(row)}>\r\n                                     \r\n                                        <FaSyringe size=\"15\"  />{\" \"}\r\n                                        <span style={{color: '#000'}}>ART Commencement</span>\r\n                                                                   \r\n                                  </MenuItem>\r\n                                  <MenuItem style={{ color:\"#000 !important\"}} onClick={() => loadEnrollment(row)}>\r\n                                     \r\n                                        <FaSyringe size=\"15\"  />{\" \"}\r\n                                        <span style={{color: '#000'}}>Clinic Follow Up Visit</span>\r\n                                                                   \r\n                                  </MenuItem>\r\n                                  <MenuItem style={{ color:\"#000 !important\"}} onClick={() => loadAnc(row)}>\r\n                                     \r\n                                        <FaSyringe size=\"15\"  />{\" \"}\r\n                                        <span style={{color: '#000'}}>Enhanced Adhrence Counselling</span>\r\n                                                                   \r\n                                  </MenuItem>\r\n                                  <MenuItem style={{ color:\"#000 !important\"}} onClick={() => loadCare(row)}>\r\n                                     \r\n                                        <FaSyringe size=\"15\"  />{\" \"}\r\n                                        <span style={{color: '#000'}}>Differentiated Care</span>\r\n                                                                   \r\n                                  </MenuItem>\r\n                                  <MenuItem style={{ color:\"#000 !important\"}} onClick={() => loadStatusUpdate(row)}>\r\n                                     \r\n                                        <FaSyringe size=\"15\"  />{\" \"}\r\n                                        <span style={{color: '#000'}}>Client Status Update</span>\r\n                                                                   \r\n                                  </MenuItem>\r\n                                  \r\n                          </MenuList>\r\n                    </Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              //backgroundColor: \"#9F9FA5\",\r\n                              color: \"#000\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Enrollment toggle={toggle} showModal={modal} patientObj={patientObj} loadPatients={patients}/>      \r\n      <ArtCommencement  toggle={Arttoggle} showModal={artModal} patientObj={patientObj} loadPatients={patients}/>\r\n      <EnhancedAdherenceCounseling  toggle={Anctoggle} showModal={ancModal} patientObj={patientObj} loadPatients={patients}/> \r\n      <DifferentiatedCare toggle={Caretoggle} showModal={careModal} patientObj={patientObj} loadPatients={patients}/>\r\n      <StatusUpdate toggle={ClientStatusUpdatetoggle} showModal={clientStatusUpdateModal} patientObj={patientObj} loadPatients={patients}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\n\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n     \r\n      <Row>\r\n       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                    >\r\n                    <Tab eventKey=\"home\" title=\"Patients\">                   \r\n                      <Dashboard />\r\n                    </Tab>\r\n                    \r\n                    </Tabs>\r\n\r\n\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [transferModal, setTransferModal] = useState(false);\r\n    const Transfertoggle = () => setTransferModal(!transferModal);\r\n    const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n        if (age_now === 0) {\r\n                return m + \" month(s)\";\r\n            }\r\n            return age_now + \" year(s)\";\r\n    };\r\n    const loadTransferModal =()=> {\r\n      //setpatientObj({...patientObj, ...row});\r\n          setTransferModal(!transferModal)\r\n  }\r\n\r\n  const CurrentStatus = (currentStatus)=>{\r\n    if(currentStatus===true){\r\n        return (<Label color=\"blue\" size=\"mini\">active</Label>);\r\n    }else {\r\n        return   (<Label color=\"yellow\" size=\"mini\">None</Label>);\r\n    }\r\n\r\n}\r\n\r\nconst HIVStatus = (patient)=>{\r\n    //console.log(patient)\r\n    if(patient.vaccination_status===null){\r\n        return (<><Label color=\"teal\" size=\"mini\">HIV Status: Negative</Label></> )\r\n    }else if(patient.vaccination_status===\"1\"){\r\n        return (<><Label color=\"red\" size=\"mini\">HIV Status: Positive</Label></> )\r\n    }else {\r\n        return \"\"\r\n    }\r\n}\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel defaultExpanded>\r\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                <Row>\r\n                    \r\n                    <Col md={11}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                        <b style={{fontSize: \"25px\"}}>\r\n                        {patientObj.firstname + \" \" + patientObj.surname }\r\n                        </b>\r\n                        \r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b>{patientObj.id }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b>{patientObj.dateOfBirth }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b>{calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b>{patientObj.gender===1?\"Male\": \"Female\" }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        {/* Phone Number : <b>{patientObj.phone }</b> */}\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b>{patientObj.address } </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                    {HIVStatus(patientObj)}\r\n                    {CurrentStatus(patientObj.active)}\r\n                    \r\n                    </Col>\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                </ExpansionPanelSummary>\r\n                \r\n                <Divider />\r\n                \r\n            </ExpansionPanel>\r\n            {/* <Vaccination toggle={toggle} showModal={modal} patientObj={patientObj}/> */}\r\n           \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {FaSyringe, FaUserEdit, FaShare, FaTrash} from \"react-icons/fa\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\n\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [patientObj, setpatientObj] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        //patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        // async function patients() {\r\n        //     axios\r\n        //         .get(`${baseUrl}covid/patients`,\r\n        //         { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        //         )\r\n        //         .then((response) => {\r\n        //             console.log(response.data)\r\n        //             setPatientList(response.data);\r\n        //         })\r\n        //         .catch((error) => {    \r\n        //         });        \r\n        // }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Vaccination History \"\r\n              columns={[\r\n              { title: \"Service type\", field: \"type\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },\r\n               \r\n                { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ patientList.map((row) => ({\r\n                  type: \"\",\r\n                   date: \"\",\r\n                    v_status: row.participant_id,\r\n                    status: row.participant_id,\r\n                   \r\n                    actions:\r\n            \r\n                    <div>\r\n                    <Menu>\r\n                        <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\r\n                          Actions <span aria-hidden>▾</span>\r\n                        </MenuButton>\r\n                            <MenuList style={{ color:\"#000000 !important\"}} >\r\n                                                           \r\n                                  <MenuItem style={{ color:\"#000 !important\"}}  >\r\n                                     \r\n                                        <FaShare size=\"15\"  />{\" \"}\r\n                                        <span style={{color: '#000'}}>View</span>\r\n                                                                    \r\n                                  </MenuItem>\r\n                                  \r\n                                 \r\n                                  \r\n                          </MenuList>\r\n                    </Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              //backgroundColor: \"#9F9FA5\",\r\n                              color: \"#000\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {   Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientHistory from './../History/PatientHistory';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [key, setKey] = useState('home');\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    //console.log(patientObj)\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n        <Link to={\"/\"} >\r\n            <ButtonMui\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                //startIcon={<FaUserPlus size=\"10\"/>}\r\n\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n            </ButtonMui>\r\n            </Link>\r\n            <br/><br/>\r\n            <PatientCardDetail patientObj={patientObj}/>\r\n            <br/><br/>\r\n            <PatientHistory />\r\n\r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\n\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\n\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n         \r\n          \r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route>\r\n          {/* \r\n          <Route path=\"/edit-patient\">\r\n            <EditPatient />\r\n          </Route> */}\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        \r\n          \r\n        </Switch>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <Router basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </Router>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}