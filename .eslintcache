[{"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\index.js":"1","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\App.js":"2","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\context\\ThemeContext.js":"3","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\reportWebVitals.js":"4","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\Home.js":"5","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\context\\ThemeDemo.js":"6","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"7","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\api.js":"8","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\Enrollment\\EnrollmentForm.js":"9","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\ArtCommencement\\ArtCommencement.js":"10","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\EnhancedAdherenceCounseling\\EnhancedAdherenceCounseling.js":"11","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\DifferentiatedCare\\DifferentiatedCare.js":"12","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\ClientStatusUpdate\\ClientStatusUpdate.js":"13"},{"size":739,"mtime":1650035038226,"results":"14","hashOfConfig":"15"},{"size":1003,"mtime":1650035512519,"results":"16","hashOfConfig":"15"},{"size":9235,"mtime":1650035038253,"results":"17","hashOfConfig":"15"},{"size":375,"mtime":1650035040770,"results":"18","hashOfConfig":"15"},{"size":1177,"mtime":1650035040752,"results":"19","hashOfConfig":"15"},{"size":3056,"mtime":1650035038254,"results":"20","hashOfConfig":"15"},{"size":17967,"mtime":1650378443670,"results":"21","hashOfConfig":"15"},{"size":416,"mtime":1650378306928,"results":"22","hashOfConfig":"15"},{"size":30792,"mtime":1650379514146,"results":"23","hashOfConfig":"15"},{"size":19972,"mtime":1650035040749,"results":"24","hashOfConfig":"15"},{"size":8037,"mtime":1650035040751,"results":"25","hashOfConfig":"15"},{"size":22513,"mtime":1650035040750,"results":"26","hashOfConfig":"15"},{"size":10542,"mtime":1650036490727,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"a4lysl",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"52","usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"58","usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"61","usedDeprecatedRules":"31"},"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\index.js",["62"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <Router basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </Router>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["63","64"],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\App.js",["65"],"import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\n\r\nimport Home from './main/webapp/jsx/components/Home'\r\n\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n         \r\n{/*           \r\n          <Route path=\"/patient-dashboard\">\r\n            <PatientDetail />\r\n          </Route>\r\n          <Route path=\"/edit-patient\">\r\n            <EditPatient />\r\n          </Route> */}\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        \r\n          \r\n        </Switch>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\Home.js",["66"],"import React, {useState, Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\n\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n     \r\n      <Row>\r\n       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                    >\r\n                    <Tab eventKey=\"home\" title=\"Patients\">                   \r\n                      <Dashboard />\r\n                    </Tab>\r\n                    \r\n                    </Tabs>\r\n\r\n\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["67","68","69","70","71","72","73","74","75","76","77","78","79","80","81"],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\api.js",[],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\Enrollment\\EnrollmentForm.js",["82","83","84","85","86","87","88"],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\ArtCommencement\\ArtCommencement.js",["89","90","91","92","93","94","95","96"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ArtCommencement = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [transferStatus, setTransferStatus] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({patient_id: \"\",current_status:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/patientstatus/current-status-codeset`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setTransferStatus(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.patient_id= patientObj.id\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/patientstatus`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Transfer successful\");\r\n                  props.toggle()\r\n                  props.loadPatients()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"xl\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 ART Commencement - <b>{patientObj.first_name + \" \" + patientObj.last_name }</b>\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">ART Start Date  * </Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"participant_id\"\r\n                                            id=\"participant_id\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.participant_id}\r\n                                            required\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">CD4 at start of ART </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                              \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"first_name\">CD4%</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"first_name\"\r\n                                        id=\"first_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.first_name}\r\n                                        required\r\n                                    />\r\n                                    {errors.first_name !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.first_name}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >Original Regimen Line  </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"mid_name\"\r\n                                        id=\"mid_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.mid_name}\r\n                                        required\r\n                                    />\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >Original Regimen</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"last_name\"\r\n                                        id=\"last_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.last_name}\r\n                                        required\r\n                                    />\r\n                                    {errors.last_name !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.last_name}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Viral Load at Start of ART *</Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                            {values.dob ===\"Invalid date\" ? (\r\n                                                <span className={classes.error}>{\"This field is required\"}</span>\r\n                                            ) : \"\" }\r\n                                            {errors.dob !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dob}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >WHO Staging</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"gender\"\r\n                                            id=\"gender\"\r\n                                            value={values.gender}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\"> Please Select</option>\r\n                                            <option value=\"1\"> Male</option>\r\n                                            <option value=\"2\"> Female</option>\r\n                                        </Input>\r\n                                        {errors.gender !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.gender}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Functional Status</Label>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"phone\"\r\n                                            id=\"phone\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.phone}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >TB Status</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Body Weight</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Height</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Blood Pressure</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Blood Pressure</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        {/* <FormGroup>\r\n                                        <Label >Height</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup> */}\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >LMP</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArtCommencement;\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\EnhancedAdherenceCounseling\\EnhancedAdherenceCounseling.js",["97","98","99","100","101","102","103","104","105","106","107","108"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Enrollment = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [transferStatus, setTransferStatus] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({patient_id: \"\",current_status:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n \r\n        const handleInputChange = e => {\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.patient_id= patientObj.id\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/patientstatus`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Transfer successful\");\r\n                  props.toggle()\r\n                  props.loadPatients()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Enhanced Adherence Counselling - <b>{patientObj.first_name + \" \" + patientObj.last_name }</b>\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of 1st EAC Session </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of 1st EAC Completion </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                 \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                 >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                                </MatButton>\r\n                          \r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}\r\n                                    onClick={props.toggle}\r\n                                >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Enrollment;\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\DifferentiatedCare\\DifferentiatedCare.js",["109","110","111","112","113","114","115","116"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ArtCommencement = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [transferStatus, setTransferStatus] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({patient_id: \"\",current_status:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/patientstatus/current-status-codeset`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setTransferStatus(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.patient_id= patientObj.id\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/patientstatus`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Transfer successful\");\r\n                  props.toggle()\r\n                  props.loadPatients()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"xl\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Differentiated Care - <b>{patientObj.first_name + \" \" + patientObj.last_name }</b>\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of Devolvement  * </Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"participant_id\"\r\n                                            id=\"participant_id\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.participant_id}\r\n                                            required\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Type of DMOC </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                              \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"first_name\">Type of Scripting</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"first_name\"\r\n                                        id=\"first_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.first_name}\r\n                                        required\r\n                                    />\r\n                                    {errors.first_name !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.first_name}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >Viral Load Assessment done </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"mid_name\"\r\n                                        id=\"mid_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.mid_name}\r\n                                        required\r\n                                    />\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >CD4 Count Assessment Done</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"last_name\"\r\n                                        id=\"last_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.last_name}\r\n                                        required\r\n                                    />\r\n                                    {errors.last_name !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.last_name}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Current Viral Load</Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                            {values.dob ===\"Invalid date\" ? (\r\n                                                <span className={classes.error}>{\"This field is required\"}</span>\r\n                                            ) : \"\" }\r\n                                            {errors.dob !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dob}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of Viral Load</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"gender\"\r\n                                            id=\"gender\"\r\n                                            value={values.gender}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\"> Please Select</option>\r\n                                            <option value=\"1\"> Male</option>\r\n                                            <option value=\"2\"> Female</option>\r\n                                        </Input>\r\n                                        {errors.gender !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.gender}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Current CD4</Label>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"phone\"\r\n                                            id=\"phone\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.phone}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of CD4</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Current Clinical Stage</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of Clinical Stage</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >ARV Regimen</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of Next ARV Refill</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of next Clinic/Lab re-eveluation</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        {/* <FormGroup>\r\n                                        <Label >LMP</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup> */}\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Input\r\n                                            type=\"checkbox\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                            className=\"ms-3\"\r\n                                        />\r\n                                        <Label >Click to fill form if patient discontinued DEMOC</Label>\r\n                                        \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Discontinued</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Reason for discontinued</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArtCommencement;\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\hiv\\src\\main\\webapp\\jsx\\components\\ClientStatusUpdate\\ClientStatusUpdate.js",["117","118","119","120","121","122","123","124","125","126"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ClientStatusUpdate = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [transferStatus, setTransferStatus] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({patient_id: \"\",current_status:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n \r\n        const handleInputChange = e => {\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.patient_id= patientObj.id\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/patientstatus`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Transfer successful\");\r\n                  props.toggle()\r\n                  props.loadPatients()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Client Status Update - <b>{patientObj.first_name + \" \" + patientObj.last_name }</b>\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >New Status</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"gender\"\r\n                                            id=\"gender\"\r\n                                            value={values.gender}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\"> Please Select</option>\r\n                                            <option value=\"1\"> Male</option>\r\n                                            <option value=\"2\"> Female</option>\r\n                                        </Input>\r\n                                        {errors.gender !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.gender}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of New Status </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Tracking Outcome</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"gender\"\r\n                                            id=\"gender\"\r\n                                            value={values.gender}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\"> Please Select</option>\r\n                                            <option value=\"1\"> Male</option>\r\n                                            <option value=\"2\"> Female</option>\r\n                                        </Input>\r\n                                        {errors.gender !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.gender}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of Tracked</Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                 \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                 >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                                </MatButton>\r\n                          \r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}\r\n                                    onClick={props.toggle}\r\n                                >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClientStatusUpdate;\r\n",{"ruleId":"127","severity":1,"message":"128","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":23},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"127","severity":1,"message":"135","line":3,"column":19,"nodeType":"129","messageId":"130","endLine":3,"endColumn":25},{"ruleId":"127","severity":1,"message":"136","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":5,"column":10,"nodeType":"139","messageId":"140","endLine":5,"endColumn":24,"fix":"141"},{"ruleId":"127","severity":1,"message":"142","line":9,"column":10,"nodeType":"129","messageId":"130","endLine":9,"endColumn":14},{"ruleId":"127","severity":1,"message":"143","line":26,"column":8,"nodeType":"129","messageId":"130","endLine":26,"endColumn":14},{"ruleId":"127","severity":1,"message":"144","line":27,"column":11,"nodeType":"129","messageId":"130","endLine":27,"endColumn":16},{"ruleId":"127","severity":1,"message":"145","line":32,"column":10,"nodeType":"129","messageId":"130","endLine":32,"endColumn":20},{"ruleId":"127","severity":1,"message":"146","line":33,"column":20,"nodeType":"129","messageId":"130","endLine":33,"endColumn":30},{"ruleId":"127","severity":1,"message":"147","line":33,"column":41,"nodeType":"129","messageId":"130","endLine":33,"endColumn":48},{"ruleId":"127","severity":1,"message":"148","line":34,"column":10,"nodeType":"129","messageId":"130","endLine":34,"endColumn":21},{"ruleId":"127","severity":1,"message":"149","line":70,"column":7,"nodeType":"129","messageId":"130","endLine":70,"endColumn":16},{"ruleId":"127","severity":1,"message":"150","line":120,"column":12,"nodeType":"129","messageId":"130","endLine":120,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":195,"column":101,"nodeType":"153","messageId":"154","endLine":195,"endColumn":119,"fix":"155"},{"ruleId":"151","severity":1,"message":"152","line":197,"column":99,"nodeType":"153","messageId":"154","endLine":197,"endColumn":117,"fix":"156"},{"ruleId":"151","severity":1,"message":"152","line":199,"column":100,"nodeType":"153","messageId":"154","endLine":199,"endColumn":118,"fix":"157"},{"ruleId":"151","severity":1,"message":"152","line":201,"column":98,"nodeType":"153","messageId":"154","endLine":201,"endColumn":116,"fix":"158"},{"ruleId":"127","severity":1,"message":"159","line":216,"column":11,"nodeType":"129","messageId":"130","endLine":216,"endColumn":24},{"ruleId":"127","severity":1,"message":"160","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"161","line":2,"column":15,"nodeType":"129","messageId":"130","endLine":2,"endColumn":18},{"ruleId":"137","severity":1,"message":"138","line":12,"column":10,"nodeType":"139","messageId":"140","endLine":12,"endColumn":24,"fix":"162"},{"ruleId":"127","severity":1,"message":"163","line":17,"column":8,"nodeType":"129","messageId":"130","endLine":17,"endColumn":14},{"ruleId":"127","severity":1,"message":"164","line":18,"column":8,"nodeType":"129","messageId":"130","endLine":18,"endColumn":23},{"ruleId":"127","severity":1,"message":"165","line":60,"column":9,"nodeType":"129","messageId":"130","endLine":60,"endColumn":16},{"ruleId":"127","severity":1,"message":"166","line":65,"column":20,"nodeType":"129","messageId":"130","endLine":65,"endColumn":29},{"ruleId":"127","severity":1,"message":"160","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"161","line":2,"column":15,"nodeType":"129","messageId":"130","endLine":2,"endColumn":18},{"ruleId":"137","severity":1,"message":"138","line":12,"column":10,"nodeType":"139","messageId":"140","endLine":12,"endColumn":24,"fix":"167"},{"ruleId":"127","severity":1,"message":"163","line":17,"column":8,"nodeType":"129","messageId":"130","endLine":17,"endColumn":14},{"ruleId":"127","severity":1,"message":"164","line":18,"column":8,"nodeType":"129","messageId":"130","endLine":18,"endColumn":23},{"ruleId":"127","severity":1,"message":"165","line":60,"column":9,"nodeType":"129","messageId":"130","endLine":60,"endColumn":16},{"ruleId":"127","severity":1,"message":"168","line":62,"column":12,"nodeType":"129","messageId":"130","endLine":62,"endColumn":26},{"ruleId":"127","severity":1,"message":"166","line":66,"column":20,"nodeType":"129","messageId":"130","endLine":66,"endColumn":29},{"ruleId":"127","severity":1,"message":"169","line":1,"column":26,"nodeType":"129","messageId":"130","endLine":1,"endColumn":35},{"ruleId":"127","severity":1,"message":"160","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"161","line":2,"column":15,"nodeType":"129","messageId":"130","endLine":2,"endColumn":18},{"ruleId":"127","severity":1,"message":"170","line":2,"column":53,"nodeType":"129","messageId":"130","endLine":2,"endColumn":58},{"ruleId":"137","severity":1,"message":"138","line":12,"column":10,"nodeType":"139","messageId":"140","endLine":12,"endColumn":24,"fix":"171"},{"ruleId":"127","severity":1,"message":"163","line":17,"column":8,"nodeType":"129","messageId":"130","endLine":17,"endColumn":14},{"ruleId":"127","severity":1,"message":"164","line":18,"column":8,"nodeType":"129","messageId":"130","endLine":18,"endColumn":23},{"ruleId":"127","severity":1,"message":"165","line":60,"column":9,"nodeType":"129","messageId":"130","endLine":60,"endColumn":16},{"ruleId":"127","severity":1,"message":"168","line":62,"column":12,"nodeType":"129","messageId":"130","endLine":62,"endColumn":26},{"ruleId":"127","severity":1,"message":"172","line":62,"column":28,"nodeType":"129","messageId":"130","endLine":62,"endColumn":45},{"ruleId":"127","severity":1,"message":"166","line":66,"column":20,"nodeType":"129","messageId":"130","endLine":66,"endColumn":29},{"ruleId":"127","severity":1,"message":"173","line":68,"column":15,"nodeType":"129","messageId":"130","endLine":68,"endColumn":32},{"ruleId":"127","severity":1,"message":"160","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"161","line":2,"column":15,"nodeType":"129","messageId":"130","endLine":2,"endColumn":18},{"ruleId":"137","severity":1,"message":"138","line":12,"column":10,"nodeType":"139","messageId":"140","endLine":12,"endColumn":24,"fix":"174"},{"ruleId":"127","severity":1,"message":"163","line":17,"column":8,"nodeType":"129","messageId":"130","endLine":17,"endColumn":14},{"ruleId":"127","severity":1,"message":"164","line":18,"column":8,"nodeType":"129","messageId":"130","endLine":18,"endColumn":23},{"ruleId":"127","severity":1,"message":"165","line":60,"column":9,"nodeType":"129","messageId":"130","endLine":60,"endColumn":16},{"ruleId":"127","severity":1,"message":"168","line":62,"column":12,"nodeType":"129","messageId":"130","endLine":62,"endColumn":26},{"ruleId":"127","severity":1,"message":"166","line":66,"column":20,"nodeType":"129","messageId":"130","endLine":66,"endColumn":29},{"ruleId":"127","severity":1,"message":"169","line":1,"column":26,"nodeType":"129","messageId":"130","endLine":1,"endColumn":35},{"ruleId":"127","severity":1,"message":"160","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"161","line":2,"column":15,"nodeType":"129","messageId":"130","endLine":2,"endColumn":18},{"ruleId":"137","severity":1,"message":"138","line":12,"column":10,"nodeType":"139","messageId":"140","endLine":12,"endColumn":24,"fix":"175"},{"ruleId":"127","severity":1,"message":"163","line":17,"column":8,"nodeType":"129","messageId":"130","endLine":17,"endColumn":14},{"ruleId":"127","severity":1,"message":"164","line":18,"column":8,"nodeType":"129","messageId":"130","endLine":18,"endColumn":23},{"ruleId":"127","severity":1,"message":"165","line":60,"column":9,"nodeType":"129","messageId":"130","endLine":60,"endColumn":16},{"ruleId":"127","severity":1,"message":"168","line":62,"column":12,"nodeType":"129","messageId":"130","endLine":62,"endColumn":26},{"ruleId":"127","severity":1,"message":"172","line":62,"column":28,"nodeType":"129","messageId":"130","endLine":62,"endColumn":45},{"ruleId":"127","severity":1,"message":"166","line":66,"column":20,"nodeType":"129","messageId":"130","endLine":66,"endColumn":29},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["176"],"no-negated-in-lhs",["177"],"'Router' is defined but never used.","'makeStyles' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"178","text":"179"},"'Link' is defined but never used.","'Button' is defined but never used.","'toast' is defined but never used.","'FaUserPlus' is defined but never used.","'FaUserEdit' is defined but never used.","'FaTrash' is defined but never used.","'MdDashboard' is defined but never used.","'useStyles' is assigned a value but never used.","'patientList' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property last_name.","MemberExpression","unexpectedWhitespace",{"range":"180","text":"181"},{"range":"182","text":"181"},{"range":"183","text":"181"},{"range":"184","text":"181"},"'CurrentStatus' is assigned a value but never used.","'Form' is defined but never used.","'Row' is defined but never used.",{"range":"185","text":"179"},"'Moment' is defined but never used.","'momentLocalizer' is defined but never used.","'history' is assigned a value but never used.","'setErrors' is assigned a value but never used.",{"range":"186","text":"179"},"'transferStatus' is assigned a value but never used.","'useEffect' is defined but never used.","'Input' is defined but never used.",{"range":"187","text":"179"},"'setTransferStatus' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.",{"range":"188","text":"179"},{"range":"189","text":"179"},"no-global-assign","no-unsafe-negation",[184,198],"token",[8344,8346],".",[8521,8523],[8699,8701],[8839,8841],[544,558],[542,556],[544,558],[542,556],[544,558]]